#!/bin/bash

# Because Git submodule commands cannot operate without a work tree, they must
# be run from within $HOME (assuming this is the root of your dotfiles)

cd "$HOME" || exit

system_type=$(uname -s)

echo "Init submodules"
yadm submodule update --recursive --init

if [ "$system_type" = "Darwin" ]; then

  # install homebrew if it's missing
  if ! command -v brew >/dev/null 2>&1; then
    read -r -p "Install homebrew (y/n)? " answer
    case ${answer:0:1} in
      y|Y )
          echo "Installing homebrew"
          /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
          brew update
          # Check if we brewfile exists then install it
          if [ -f "$HOME/.config/Brewfile" ]; then
            read -r -p "Install brewfile apps (y/n)?" answer
            case ${answer:0:1} in
                y|Y )
                    echo "Installing homebrew bundle"
                    brew bundle --file="$HOME/.config/Brewfile"
                    brew cleanup
                ;;
                * )
                ;;
            esac
          fi

    ;;
    * )
    ;;
    esac
  fi

  read -r -p "Add Brews fish and zsh to '/etc/shells' (y/n)?" answer
  case ${answer:0:1} in
    y|Y )
      echo "Adding shells"
      echo "/usr/local/bin/fish" | sudo tee -a /etc/shells
      echo "/usr/local/bin/zsh" | sudo tee -a /etc/shells
    ;;
    * )
    ;;
  esac

fi


# Default shell to fish
read -r -p "Change default shell to fish (y/n)?" answer
case ${answer:0:1} in
  y|Y )
    echo "Setting shell to fish"
    sudo chsh -s '$(which fish)' '$USER'
  ;;
  * )
  ;;
esac
