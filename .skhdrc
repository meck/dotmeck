#  NOTE(koekeishiya): A list of all built-in modifier and literal keywords can
#                     be found at https://github.com/koekeishiya/skhd/issues/1
#
#                     A hotkey is written according to the following rules:
#
#                       hotkey   = <mode> '<' <action> | <action>
#
#                       mode     = 'name of mode' | <mode> ',' <mode>
#
#                       action   = <keysym> ':' <command> | <keysym> '->' ':' <command>
#                                  <keysym> ';' <mode>    | <keysym> '->' ';' <mode>
#
#                       keysym   = <mod> '-' <key> | <key>
#
#                       mod      = 'built-in mod keyword' | <mod> '+' <mod>
#
#                       key      = <literal> | <keycode>
#
#                       literal  = 'single letter or built-in keyword'
#
#                       keycode  = 'apple keyboard kVK_<Key> values (0x3C)'
#
#                       ->       = keypress is not consumed by skhd
#
#                       command  = command is executed through '$SHELL -c' and
#                                  follows valid shell syntax. if the $SHELL environment
#                                  variable is not set, it will default to '/bin/bash'.
#                                  when bash is used, the ';' delimeter can be specified
#                                  to chain commands.
#
#                                  to allow a command to extend into multiple lines,
#                                  prepend '\' at the end of the previous line.
#
#                                  an EOL character signifies the end of the bind.
#
#

#  NOTE(koekeishiya): Modal operations
#
#                     defines a new mode 'switcher' with an on_enter command
#                       :: switcher : chunkc border::color 0xff24ccaa
#
#                     defines a new mode named 'test'
#                       :: test
#
#                     from 'default' mode, activate mode 'test'
#                       cmd - x ; test
#
#                     from 'test' mode, activate mode 'default'
#                       test < cmd - x ; default
#
#                     launch a new terminal instance when in either 'default' or 'test' mode
#                       default, test < cmd - return : open -na /Applications/Terminal.app

# The default mode
:: default : $HOME/bin/darkmode false;\
            chunkc border::color 0xff0f6288

# A mode for window operations
:: wmMode @ : $HOME/bin/darkmode true;\
            chunkc border::color 0xffbf616a

# enter and exit wmmode
alt - space ; wmMode
wmMode < escape ; default

# Open a new terminal window
cmd - return : open -na /Applications/Alacritty.app

# Open a new browser
# cmd + shift - return : open -na "Google Chrome"
# cmd + shift + alt - return : osascript -e 'tell application "Safari" to make new document'

# Open a new finder window
# alt - f : open ~ ;\

# Turn on and off FFM: .
wmMode < 0x2F : chunkc core::load ffm.so
wmMode < shift - 0x2F : chunkc core::unload ffm.so

# Turn on and off border: /
wmMode < 0x2C : chunkc core::load border.so
wmMode < shift - 0x2C : chunkc core::unload border.so

# change layout of desktop : n m ,
wmMode < n : chunkc tiling::desktop --layout bsp
wmMode < m : chunkc tiling::desktop --layout monocle
wmMode < 0x2B : chunkc tiling::desktop --layout float

# focus window
default, wmMode < alt - h : chunkc tiling::window --focus west
default, wmMode < alt - j : chunkc tiling::window --focus south
default, wmMode < alt - k : chunkc tiling::window --focus north
default, wmMode < alt - l : chunkc tiling::window --focus east

# focus monitor
default, wmMode < shift + alt - h  : chunkc tiling::monitor -f prev
default, wmMode < shift + alt - l  : chunkc tiling::monitor -f next

# focus monitor
default, wmMode < shift + alt - j : chunkc tiling::window --focus prev
default, wmMode < shift + alt - k : chunkc tiling::window --focus next

# rotate tree
wmMode < space : chunkc tiling::desktop --rotate 90
wmMode < shift - space : chunkc tiling::desktop --rotate 270

# mirror tree y-axis
wmMode < i : chunkc tiling::desktop --mirror vertical

# mirror tree x-axis
wmMode < o : chunkc tiling::desktop --mirror horizontal

# Adjust Gaps uses Minus/Plus key
wmMode < 0x18 : chunkc tiling::desktop --gap inc
wmMode < 0x1B : chunkc tiling::desktop --gap dec

# Adjust Padding uses shift Minus/Plus key
wmMode < shift - 0x18 : chunkc tiling::desktop --padding inc
wmMode < shift - 0x1B : chunkc tiling::desktop --padding dec

# Adjust both of the abow uses alt Minus/Plus key
wmMode < alt - 0x18 : chunkc tiling::desktop --padding inc;\
                      chunkc tiling::desktop --gap inc
wmMode < alt - 0x1B : chunkc tiling::desktop --padding dec;\
                      chunkc tiling::desktop --gap dec

# toggle window native fullscreen
wmMode < f : chunkc tiling::window --toggle native-fullscreen

# toggle window parent zoom
wmMode < r : chunkc tiling::window --toggle parent

# toggle window split type
wmMode < t : chunkc tiling::window --toggle split

# float / unfloat window and center on screen
wmMode < g : chunkc tiling::window --toggle float;\
             chunkc tiling::window --grid-layout 6:6:1:1:4:4

# equalize size of windows
wmMode < q : chunkc tiling::desktop --equalize

# swap window
wmMode < h : chunkc tiling::window --swap west
wmMode < j : chunkc tiling::window --swap south
wmMode < k : chunkc tiling::window --swap north
wmMode < l : chunkc tiling::window --swap east

# move window
wmMode < shift - h : chunkc tiling::window --warp west
wmMode < shift - j : chunkc tiling::window --warp south
wmMode < shift - k : chunkc tiling::window --warp north
wmMode < shift - l : chunkc tiling::window --warp east

# send window to desktop
wmMode < c : chunkc tiling::window --send-to-desktop $(chunkc get _last_active_desktop)
# wmMode < z : chunkc tiling::window --send-to-desktop prev
# wmMode < x : chunkc tiling::window --send-to-desktop next
wmMode < 1 : chunkc tiling::window --send-to-desktop 1
wmMode < 2 : chunkc tiling::window --send-to-desktop 2
wmMode < 3 : chunkc tiling::window --send-to-desktop 3
wmMode < 4 : chunkc tiling::window --send-to-desktop 4
wmMode < 5 : chunkc tiling::window --send-to-desktop 5
wmMode < 6 : chunkc tiling::window --send-to-desktop 6

# send window to monitor and follow focus
wmMode < shift - z  : chunkc tiling::window --send-to-monitor prev; chunkc tiling::monitor -f prev
wmMode < shift - x  : chunkc tiling::window --send-to-monitor next; chunkc tiling::monitor -f next
wmMode < shift - 1  : chunkc tiling::window --send-to-monitor 1; chunkc tiling::monitor -f 1
wmMode < shift - 2  : chunkc tiling::window --send-to-monitor 2; chunkc tiling::monitor -f 2
wmMode < shift - 3  : chunkc tiling::window --send-to-monitor 3; chunkc tiling::monitor -f 3

# increase region size
wmMode < a : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge west
wmMode < s : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge south
wmMode < w : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge north
wmMode < d : chunkc tiling::window --use-temporary-ratio 0.1 --adjust-window-edge east

# decrease region size
wmMode < shift - d : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge west
wmMode < shift - w : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge south
wmMode < shift - s : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge north
wmMode < shift - a : chunkc tiling::window --use-temporary-ratio -0.1 --adjust-window-edge east

# ctrl + alt - w : chunkc tiling::desktop --deserialize ~/.chunkwm_layouts/dev_3
